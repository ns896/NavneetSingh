import{A as e,x as t,_ as i,n as s,j as n,s as o,h as a,bS as r,I as d,v as c,m as l}from"./icon-333959f6.js";import{I as h,h as u,a4 as p,a5 as f,fe as b,W as m,a as g,d as v,S as y,k,t as S,df as w,bG as I,ff as C,b as E,_,B as T,fg as N,fh as x,fi as U,fj as P,v as L}from"./shell-010f89b8.js";import{c as D}from"./index-18b99d92.js";import{p as A,s as R}from"./utils-481e29a3.js";import{l as B}from"./list-item-d89a1548.js";import"./faceplate-dropdown-menu-2dea2e9e.js";import"./faceplate-menu-dc578ed3.js";import"./shreddit-spoiler-a1573f75.js";import"./popper-controller-f75c8704.js";var O;h.Inbox,h.MiniInbox,function(e){e.HideNotification="hide_notification",e.HideSubreddit="hide_subreddit",e.HideUpdates="hide_updates",e.DisableNotificationType="disable_notification_type",e.BlockUser="block_user"}(O||(O={}));const M=({notificationType:e,notificationId:t,isViewed:i,isClicked:s})=>({notification:{type:e},inbox:{id:t,is_viewed:i,is_clicked:s},screen:{height:window.screen.height,width:window.screen.width}}),H=({notificationType:e,notificationId:t,isViewed:i,isClicked:s,action:n,noun:o,actionInfo:a})=>u({source:"inbox",action:n,noun:o},{...M({notificationType:e,notificationId:t,isViewed:i,isClicked:s}),...a&&{action_info:a}}),F=e=>V({...e,noun:"overflow_option"}),V=({notificationType:e,notificationId:t,isViewed:i,isClicked:s,noun:n,action:o="click",action_info_type:a})=>H({action:o,noun:n,notificationType:e,notificationId:t,isViewed:i,isClicked:s,actionInfo:a?{type:a}:void 0}),$=e=>Array.from(document.querySelectorAll('[data-id="notification-item-prevent-link"]')).some((t=>t.contains(e.target)));var q,j,Y;!function(e){e.Popover="popover",e.Route="route"}(q||(q={})),function(e){e.NumNotifications="numNotifications",e.RenderType="renderType"}(j||(j={})),function(e){e.CursorForNextPage="nextPageCursor",e.HasRenderedEarlierHeader="hasRenderedEarlierHeader"}(Y||(Y={}));D(`/svc/shreddit/notifications-inbox-content/:${j.NumNotifications}/:${j.RenderType}`);const z=new Set([b.CommentReply,b.PostReply,b.PrivateMessage,b.UsernameMention]);function J(e,t,i){window.Sentry?.captureMessage?.(`Unexpected inbox mark as read error id: ${t}, type: ${i}, err: ${JSON.stringify(e)}`)}let W=class extends(m(g(o))){constructor(){super(...arguments),this.isViewed=!1,this.isDeletedPost=!1,this.isRemovedPost=!1,this.notificationId="",this.messageType="",this.hasLink="",this.isHidden=!1,this.observer=null,this.handleVisibilityChange=([{isIntersecting:e}])=>{var t;e&&!this.isViewed&&(this.trackEvent((t=this.getTrackEventProperties(),H({...t,noun:"inbox_notification",action:"view"}))),this.isViewed=!0,this.observer?.disconnect())},this.hideIfIsSelf=e=>{e===this.notificationId&&this.hide()},this.hide=()=>this.isHidden=!0,this.onClick=async e=>{(!this.hasLink||this.isDeletedPost||this.isRemovedPost||$(e))&&e.preventDefault();return!!e.target?.closest("notification-context-menu")||this.trackEvent((({notificationType:e,notificationId:t,isViewed:i,isClicked:s,clickTarget:n})=>H({action:"click",noun:"inbox_notification",notificationType:e,notificationId:t,isViewed:i,isClicked:s,actionInfo:{position:"cta"===n?2:1}}))({...this.getTrackEventProperties(),clickTarget:"notification"})),this.isDeletedPost?this.showAlert({message:"Sorry this post was deleted"}):this.isRemovedPost&&this.showAlert({message:"This content is no longer available"}),await this.fireReadEvent(),!1},this.getUnreadChildElement=()=>this.querySelector(".unread-notification"),this.fireReadEvent=async()=>{this.getUnreadChildElement()&&(this.removeUnreadState(),await async function(e,t){if(e)try{let i;z.has(t)?(i=await p({operation:f.MarkPrivateMessageAsRead,variables:{input:{messageId:e}}}),J(i.data.markPrivateMessageAsRead?.errors,e,t)):(i=await p({operation:f.MarkNotificationRead,variables:{input:{notificationId:e}}}),J(i.data.readNotificationLoggedIn?.errors,e,t))}catch(e){}}(this.notificationId,this.messageType))},this.removeUnreadState=()=>this.getUnreadChildElement()?.classList.remove("unread-notification"),this.showAlert=({message:e})=>this.dispatchEvent(v("faceplate-alert",{level:y.warning,message:e})),this.getTrackEventProperties=()=>({notificationType:this.messageType,notificationId:this.notificationId,isViewed:this.isViewed,isClicked:!!this.getUnreadChildElement()})}connectedCallback(){super.connectedCallback(),this.observer=new IntersectionObserver(this.handleVisibilityChange,{root:document.querySelector('[data-id="notification-container-element"]'),threshold:.25}),this.observer.observe(this)}disconnectedCallback(){super.disconnectedCallback(),this.observer?.disconnect()}firstUpdated(){var e;this.trackEvent((e=this.getTrackEventProperties(),H({...e,noun:"inbox_notification",action:"receive"}))),this.querySelector("a")?.addEventListener("click",this.onClick),this.subscribe(k.NotificationInboxNotificationHideEvent,this.hideIfIsSelf),this.subscribe(k.InboxReadAllEvent,this.removeUnreadState)}render(){return this.isHidden?e:t`<slot></slot>`}};W.styles=[S],i([s({type:Boolean,attribute:"is-viewed",reflect:!0})],W.prototype,"isViewed",void 0),i([s({type:Boolean,attribute:"is-deleted-post"})],W.prototype,"isDeletedPost",void 0),i([s({type:Boolean,attribute:"is-removed-post"})],W.prototype,"isRemovedPost",void 0),i([s({type:String,attribute:"notification-id"})],W.prototype,"notificationId",void 0),i([s({type:String,attribute:"message-type"})],W.prototype,"messageType",void 0),i([s({type:Boolean,attribute:"has-link"})],W.prototype,"hasLink",void 0),i([n()],W.prototype,"isHidden",void 0),W=i([a("notification-item")],W);function G({currentStorageData:e,userId:t,inboxBannerName:i}){return e?.[t]?.find((e=>e.inboxBannerName===i))?.seenCount??0}function K({userId:e,inboxBannerName:t,seenCount:i,currentStorageData:s={}}){const n={...s||{},[e]:[{inboxBannerName:t,seenCount:i}]};R("inbox_banner_seen_count_store",n)}let Q=class extends o{constructor(){super(...arguments),this.isHidden=!1,this.colorMap={},this.hide=e=>{e.preventDefault(),this.isHidden=!0,this.userId&&this.name&&this.maxViews&&function({userId:e,inboxBannerName:t,seenCount:i}){K({userId:e,currentStorageData:A("inbox_banner_seen_count_store"),inboxBannerName:t,seenCount:i})}({userId:this.userId,inboxBannerName:this.name,seenCount:this.maxViews})},this.onClick=e=>{$(e)&&e.preventDefault()}}firstUpdated(){if(this.querySelectorAll('[data-id="notification-dismissal-element"').forEach((e=>e.addEventListener("click",this.hide))),this.querySelectorAll("a").forEach((e=>e.addEventListener("click",this.onClick))),Object.entries(this.colorMap).forEach((([e,t])=>{this.style.setProperty(`--${e}`,t)})),this.userId&&this.name){const e=function({userId:e,inboxBannerName:t}){return G({userId:e,inboxBannerName:t,currentStorageData:A("inbox_banner_seen_count_store")})}({userId:this.userId,inboxBannerName:this.name});void 0!==this.maxViews&&e>=this.maxViews?this.isHidden=!0:function({userId:e,inboxBannerName:t}){const i=A("inbox_banner_seen_count_store");K({userId:e,currentStorageData:i,inboxBannerName:t,seenCount:G({userId:e,inboxBannerName:t,currentStorageData:i})+1})}({userId:this.userId,inboxBannerName:this.name})}}render(){return this.isHidden?e:t`<slot></slot>`}};Q.styles=[S],i([n()],Q.prototype,"isHidden",void 0),i([s({type:Object})],Q.prototype,"colorMap",void 0),i([s({type:String,attribute:"user-id"})],Q.prototype,"userId",void 0),i([s({type:String})],Q.prototype,"name",void 0),i([s({type:Number,attribute:"max-views"})],Q.prototype,"maxViews",void 0),Q=i([a("notification-inbox-banner")],Q);const X=({notificationLevel:e,isEnablingUpdates:t})=>{if(t)switch(e){case w.Off:case null:return w.Low;case w.Low:case w.Frequent:default:return w.Frequent}else switch(e){case w.Frequent:return w.Low;case w.Low:default:return w.Off}};let Z=class extends(m(g(o))){constructor(){super(...arguments),this.messageType="",this.notificationLevel=null,this.notificationId="",this.userId="",this.userName="",this.postId="",this.commentId="",this.subredditId="",this.subredditName="",this.isHideEligible=!1,this.isToggleUpdateFromSubredditEligible=!1,this.isToggleNotificationUpdateEligible=!1,this.isToggleLowUpdateFromSubredditEligible=!1,this.initialNotificationLevel=null,this.isNotificationLevelOff=()=>!this.notificationLevel||this.notificationLevel===w.Off,this.getIsRead=()=>!this.closest("notification-item")?.querySelector(".unread-notification"),this.shouldRenderHide=()=>this.isHideEligible,this.shouldRenderDisableUpdates=()=>this.isToggleNotificationUpdateEligible&&(this.postId||this.commentId),this.shouldRenderDisableUpdatesFromSubreddit=()=>this.subredditId&&this.isToggleUpdateFromSubredditEligible,this.shouldRenderBlockThisUser=()=>this.userId&&this.userName&&this.messageType&&[b.ChatAcceptInvite,b.ChatMessage,b.ChatMessageReaction,b.ChatRequest,b.AwardReceived].includes(this.messageType),this.shouldRenderSeeLessFromSubreddit=()=>this.subredditId&&this.isToggleLowUpdateFromSubredditEligible,this.hideNotification=async()=>{try{if((await p({operation:f.DeleteInboxNotifications,variables:{input:{notificationIds:[this.notificationId]}}})).data.deleteInboxNotifications?.ok)return this.showAlert({level:y.notice,message:"Success! You won't see updates on this in the future"}),void this.publish(k.NotificationInboxNotificationHideEvent,this.notificationId)}catch(e){window.Sentry?.captureMessage(e)}this.showAlert({})},this.changeUpdatesFromSubreddit=async e=>{try{this.notificationLevel=e?this.initialNotificationLevel:w.Off;if((await p({operation:f.UpdateSubredditNotificationSettings,variables:{input:{subredditId:this.subredditId,isUpdateFromSubredditEnabled:e,isSubredditUpdatesInterestingPostEnabled:!this.isNotificationLevelOff()}}})).data.updateSubredditNotificationSettings?.ok)return void this.handleAlerts({actionInfoType:O.HideSubreddit,isDo:!e,doConfig:{message:"Success! You won't see updates from this subreddit in the future.",undoOnClick:()=>this.changeUpdatesFromSubreddit(!0)},undoConfig:{message:"Success! Hiding updates from this subreddit has been undone."}})}catch(e){window.Sentry?.captureMessage(e)}this.notificationLevel=e?w.Off:this.initialNotificationLevel,this.showAlert({})},this.changeSeeLessFromSubreddit=async e=>{this.notificationLevel=X({isEnablingUpdates:e,notificationLevel:this.notificationLevel});try{if((await p({operation:f.UpdateSubredditNotificationSettings,variables:{input:{subredditId:this.subredditId,isUpdateFromSubredditEnabled:!this.isNotificationLevelOff(),isSubredditUpdatesInterestingPostEnabled:e}}})).data.updateSubredditNotificationSettings?.ok)return void this.handleAlerts({actionInfoType:O.DisableNotificationType,isDo:!e,doConfig:{message:"Success! You'll see less from this subreddit in the future.",undoOnClick:()=>this.changeSeeLessFromSubreddit(!0)},undoConfig:{message:"Success! Seeing less from this subreddit has been undone."}})}catch(e){window.Sentry?.captureMessage(e)}this.notificationLevel=X({isEnablingUpdates:!e,notificationLevel:this.notificationLevel}),this.showAlert({})},this.changeUpdatesOnThisPost=async e=>{try{if((await p({operation:f.UpdatePostSendRepliesState,variables:{input:{postId:this.postId,sendRepliesState:e?I.Send:I.DoNotSend}}})).data.updatePostSendRepliesState?.ok)return void this.handleAlerts({actionInfoType:O.HideUpdates,isDo:!e,doConfig:{message:"Success! You won't see updates on this post in the future.",undoOnClick:()=>this.changeUpdatesOnThisPost(!0)},undoConfig:{message:"Success! Hiding updates has been undone."}})}catch(e){window.Sentry?.captureMessage(e)}this.showAlert({})},this.changeUpdatesOnThisComment=async e=>{try{if((await p({operation:f.UpdateCommentSendRepliesState,variables:{input:{commentId:this.commentId,sendRepliesState:e?I.Send:I.DoNotSend}}})).data.updateCommentSendRepliesState?.ok)return void this.handleAlerts({actionInfoType:O.HideUpdates,isDo:!e,doConfig:{message:"Success! You won't see updates on this comment in the future.",undoOnClick:()=>this.changeUpdatesOnThisComment(!0)},undoConfig:{message:"Success! Hiding updates has been undone."}})}catch(e){window.Sentry?.captureMessage(e)}this.showAlert({})},this.changeUserBlockStatus=async e=>{try{if((await p({operation:f.UpdateRedditorBlockState,variables:{input:{redditorId:this.userId,blockState:e}}})).data.updateRedditorBlockState?.ok)return void this.handleAlerts({actionInfoType:O.BlockUser,isDo:e===C.Blocked,doConfig:{message:`u/${this.userName} is now blocked.`,undoOnClick:()=>this.changeUserBlockStatus(C.None)},undoConfig:{message:`u/${this.userName} is now unblocked.`}})}catch(e){window.Sentry?.captureMessage(e)}this.showAlert({})},this.handleAlerts=({isDo:e,actionInfoType:t,doConfig:i,undoConfig:s})=>{e?this.showAlert({level:y.notice,message:i.message,undoOnClick:i.undoOnClick,actionInfoType:t}):this.showAlert({level:y.notice,message:s.message})},this.showAlert=({level:e=y.error,message:t="Something went wrong",undoOnClick:i,actionInfoType:s})=>this.dispatchEvent(v("faceplate-alert",{level:e,message:t,namedContent:i&&s?{action:E({children:"Undo",attributes:{onclick:()=>{var e;i(),this.trackEvent((e=this.getTrackClickOptionProperties(s),V({...e,action:"undo",noun:"overflow_option"})))}}})}:void 0})),this.renderHideThisNotification=()=>this.renderMenuElement({label:"Hide",onClick:()=>(this.trackEvent(F(this.getTrackClickOptionProperties(O.HideNotification))),this.hideNotification()),dataTestId:"hide-this-notification"}),this.renderDisableUpdates=()=>this.renderMenuElement({label:"Turn off this reply notification",onClick:()=>(this.trackEvent(F(this.getTrackClickOptionProperties(O.HideUpdates))),this.postId?this.changeUpdatesOnThisPost(!1):this.changeUpdatesOnThisComment(!1)),dataTestId:"block-updates-from-post-or-comment"}),this.renderDisableUpdatesFromSubreddit=()=>this.renderMenuElement({label:this.subredditName?`Turn off r/${this.subredditName} notifications`:"Disable updates from this community",onClick:()=>(this.trackEvent(F(this.getTrackClickOptionProperties(O.HideSubreddit))),this.changeUpdatesFromSubreddit(!1)),dataTestId:"block-updates-from-subreddit"}),this.renderBlockThisUser=()=>this.renderMenuElement({label:"Block this user ",onClick:()=>(this.trackEvent(F(this.getTrackClickOptionProperties(O.BlockUser))),this.changeUserBlockStatus(C.Blocked)),dataTestId:"block-user"}),this.renderSeeLessFromSubreddit=()=>this.renderMenuElement({label:"See less from this community",onClick:()=>(this.trackEvent(F(this.getTrackClickOptionProperties(O.DisableNotificationType))),this.changeSeeLessFromSubreddit(!1)),dataTestId:"see-less"}),this.renderMenuElement=({label:e,onClick:i,dataTestId:s})=>t`\n ${B({onClick:i,label:e,attributes:{role:"menuitem","data-testid":s}})}\n `,this.onOpenMenu=()=>{return this.trackEvent((e=this.getTrackEventProperties(),V({...e,noun:"inbox_notification_overflow"})));var e},this.getTrackClickOptionProperties=e=>({...this.getTrackEventProperties(),action_info_type:e}),this.getTrackEventProperties=()=>({notificationId:this.notificationId,notificationType:this.messageType,isViewed:!0,isClicked:this.getIsRead()})}render(){const i=[this.shouldRenderHide()?this.renderHideThisNotification():null,this.shouldRenderSeeLessFromSubreddit()?this.renderSeeLessFromSubreddit():null,this.shouldRenderDisableUpdates()?this.renderDisableUpdates():null,this.shouldRenderBlockThisUser()?this.renderBlockThisUser():null,this.shouldRenderDisableUpdatesFromSubreddit()?this.renderDisableUpdatesFromSubreddit():null].filter(Boolean);return 0===i.length?e:t`\n <faceplate-dropdown-menu position="bottom-end">\n ${E({appearance:"plain",attributes:{"aria-label":"Open notification actions"},leadingIcon:r({size:d.Small}),size:_.Small})}\n <faceplate-tracker \n slot="menu" \n source="${"inbox"}" \n action="view" \n noun="${"inbox_notification_overflow"}" \n data-faceplate-tracking-context="${JSON.stringify(M(this.getTrackEventProperties()))}" \n>\n <faceplate-menu slot="menu" class="block bg-neutral-background">\n ${i}\n </faceplate-menu>\n </faceplate-tracker>\n </faceplate-dropdown-menu>\n `}};Z.styles=[S],i([s({type:String,attribute:"message-type"})],Z.prototype,"messageType",void 0),i([s({type:String,attribute:"notification-level",reflect:!0})],Z.prototype,"notificationLevel",void 0),i([s({type:String,attribute:"notification-id"})],Z.prototype,"notificationId",void 0),i([s({type:String,attribute:"user-id"})],Z.prototype,"userId",void 0),i([s({type:String,attribute:"user-name"})],Z.prototype,"userName",void 0),i([s({type:String,attribute:"post-id"})],Z.prototype,"postId",void 0),i([s({type:String,attribute:"comment-id"})],Z.prototype,"commentId",void 0),i([s({type:String,attribute:"subreddit-id"})],Z.prototype,"subredditId",void 0),i([s({type:String,attribute:"subreddit-name"})],Z.prototype,"subredditName",void 0),i([s({type:Boolean,attribute:"is-hide-eligible"})],Z.prototype,"isHideEligible",void 0),i([s({type:Boolean,attribute:"is-toggle-update-from-subreddit-eligible"})],Z.prototype,"isToggleUpdateFromSubredditEligible",void 0),i([s({type:Boolean,attribute:"is-toggle-notification-update-eligible"})],Z.prototype,"isToggleNotificationUpdateEligible",void 0),i([s({type:Boolean,attribute:"is-toggle-low-update-from-subreddit-eligible"})],Z.prototype,"isToggleLowUpdateFromSubredditEligible",void 0),Z=i([a("notification-context-menu")],Z);let ee=class extends T{constructor(){super(...arguments),this.trackExitEvent=()=>{this.trackEvent()}}get miniInboxTooltip(){return document.querySelector("#mini-inbox-tooltip")}connectedCallback(){super.connectedCallback(),this.source="inbox",this.action="exit",this.noun="mini_inbox",this.miniInboxTooltip?.addEventListener(this.closeEventName,this.trackExitEvent)}disconnectedCallback(){super.disconnectedCallback(),this.miniInboxTooltip?.removeEventListener(this.closeEventName,this.trackExitEvent)}get closeEventName(){return`${this.miniInboxTooltip?.tagName.toLowerCase()}:close`}};ee=i([a("notification-inbox-exit-tracker")],ee);let te=class extends(g(m(o))){constructor(){super(...arguments),this.fireReadAll=async()=>{try{this.trackEvent((({badgeCount:e})=>u({source:"inbox",action:"click",noun:"mark_all_as_read"},{action_info:{type:e.toString()}}))({badgeCount:this.getUnreadCount()})),this.publish(k.InboxReadAllEvent),this.publish(k.InboxCountChanged,0);(await p({operation:f.MarkPrivateMessageAsRead,variables:{input:{}}})).data.markPrivateMessageAsRead?.ok||this.dispatchErrorMessage()}catch(e){this.dispatchErrorMessage()}},this.getUnreadCount=()=>document.querySelector('[data-id="notification-count-element"]')?.getCount()??0,this.dispatchErrorMessage=()=>{this.dispatchEvent(v("faceplate-alert",{level:y.error,message:"Something went wrong while marking all notifications as read"}))}}firstUpdated(){this.querySelector("*")?.addEventListener("click",this.fireReadAll)}render(){return t` <slot></slot> `}};te.styles=[S],te=i([a("mark-all-messages-read")],te);let ie=class extends(g(o)){constructor(){super(...arguments),this.initialMessagesCount=0}async firstUpdated(){this.publish(k.InboxCountChanged,this.initialMessagesCount),await p({operation:f.UpdateInboxActivitySeenState,variables:{input:{lastSentAt:(new Date).toISOString()}}})}render(){return e}};ie.styles=[S],i([s({type:Number,attribute:"initial-messages-count"})],ie.prototype,"initialMessagesCount",void 0),ie=i([a("mark-all-notifications-seen")],ie);const se=e=>u({source:"popup",action:e,noun:"desktop_notification_permissions"}),ne="Notification"in globalThis?Notification:null;let oe=class extends(m(o)){constructor(){super(),this.variant="banner_once",this.statusPending=!0,this._notificationApi=ne,this._swAPI=navigator.serviceWorker,this.onEnable=async()=>{await this._requestPushPermissions()&&this.remove()},this.onDecline=()=>{this.trackEvent(se("close"));const e=this._getLocalStorage()||{};e.last_dismissed=Date.now(),this._setLocalStorage(e),this.remove()},this.onClose=()=>{this.trackEvent(se("close")),this.remove()}}async connectedCallback(){super.connectedCallback();const e=await this._getPushNotificationStatus();switch(this.statusPending=!1,e){case N.Blocked:case N.Error:this._unsubscribePushSubscription()}if(this.isThrottled())return this.remove();switch(e){case N.Blocked:case N.Pending:case N.NoSubscription:case N.Error:return this._checkAndUpdateLocalStorage(),void this.trackEvent(se("view"));case N.NoServiceWorker:case N.NoPushManager:case N.NoNotificationAPI:case N.Enabled:return this.remove()}}_getPushNotificationStatus(){return x(this._swAPI,this._notificationApi)}_requestPushPermissions(){return U(this._swAPI,this._notificationApi)}_unsubscribePushSubscription(){return P(this._swAPI)}_getLocalStorage(){return JSON.parse(L.getItem("pn_banner_state")??"null")}_setLocalStorage(e){return L.setItem("pn_banner_state",JSON.stringify(e))}_checkAndUpdateLocalStorage(){const e=this._getLocalStorage()??{};(!e.last_seen||Date.now()-e.last_seen>36e5)&&(e.last_seen=Date.now(),this._setLocalStorage(e))}isThrottled(){const e=this._getLocalStorage();if(!e)return!1;if(!e.last_dismissed&&!e.last_seen)return!1;if(e.last_seen&&!e.last_dismissed){const t=Date.now()-e.last_seen;if(t>36e5&&t<828e5)return!0}if(!e.last_dismissed)return!1;switch(this.variant){case"banner_once":return!0;case"banner_weekly":return Date.now()-e.last_dismissed<6012e5;case"banner_monthly":return Date.now()-e.last_dismissed<24156e5}return!1}render(){return this.statusPending?e:t`\n <div class="rounded-sm border-sm border-tone-4 border-solid p-md mx-md mb-md relative">\n <p class="font-semibold text-20 my-0">\n Enable Push Notifications\n ${E({appearance:"secondary",shape:"pill",leadingIcon:c({size:d.ExtraSmall}),size:_.ExtraSmall,attributes:{"aria-label":"Dismiss push notification prompt",className:"absolute top-xs right-xs",onclick:this.onClose}})}\n </p>\n <p class="text-14">\n Don't miss out on updates.\n </p>\n <div class="flex flex-row gap-lg">\n ${E({appearance:"primary",attributes:{onclick:this.onEnable},children:"Turn On"})}\n ${E({appearance:"secondary",attributes:{onclick:this.onDecline},children:"No Thanks"})}\n </div>\n </div>\n `}};oe.styles=S,i([s()],oe.prototype,"variant",void 0),i([l("rpl-dialog")],oe.prototype,"unblockDialog",void 0),i([n()],oe.prototype,"statusPending",void 0),oe=i([a("shreddit-pn-banner")],oe);
//# sourceMappingURL=notifications-inbox-client-js-08004c79.js.map
